trigger:
- '*'

variables:
  buildConfiguration: 'Release'

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-18.04'
      demands:
      - npm

    variables:
      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
      dotnetSdkVersion: '3.1.300'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'

    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        verbose: false

    - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
      displayName: 'Compile Sass assets'

    - task: gulp@1
      displayName: 'Run gulp tasks'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: $(wwwrootDir)

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

  - job: BuildDacpac
    pool:
      vmImage: 'windows-2019'
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: VSBuild@1
      displayName: 'Build the database project'
      inputs:
        project: '**/*.sqlproj'

    - task: CopyFiles@2
      displayName: 'Copy dacpac file to staging directory'
      inputs:
        contents: |
          Tailspin.SpaceGame.Database/bin/**/*.dacpac
        targetFolder: '$(Build.StagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: dropDacpac
      condition: succeededOrFailed()

- stage: 'Provision'
  displayName: 'Provision the database and web application'
  jobs: 
  - job: 'DeployInfrastructure'
    displayName: 'Deploy infrastructure job'
    pool:
      vmImage: 'ubuntu-18.04'
    variables:
    - group: 'Release'
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        ConnectedServiceName: 'Resource Manager - Tailspin - Space Game'
        subscriptionName: '$(subscription)'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'tailspin-spacegame-web-rg'
        location: '$(location)'
        templateLocation: 'Linked artifact'
        csmFile: 'template.json'
        csmParametersFile: 'deploymentParameters.json'
        deploymentMode: 'Incremental'
        deploymentOutputs: ResourceGroupDeploymentOutputs

- stage: DBAVerificationScript
  displayName: 'Script database schema changes'
  dependsOn: Provision
  jobs:
  - deployment: DBAVerificationScript
    pool:
      vmImage: 'windows-2019'
    variables:
    - group: 'Release'
    environment: 'dbaverificationscript'
    strategy:
      runOnce:
        deploy:
          steps: 
          - task: AzureKeyVault@1
            inputs:
              azureSubscription: 'Resource Manager - Tailspin - Space Game'
              keyVaultName: '$(keyVaultName)'
              secretsFilter: '*'
          - download: current
            artifact: dropDacpac
            patterns: '**/*'
          - task: SqlAzureDacpacDeployment@1
            displayName: Generate schema change script
            inputs:
              azureSubscription: 'Resource Manager - Tailspin - Space Game'
              authenticationType: 'server'
              serverName: 'tailspin-space-game-sql-dev-$(uniqueSuffix).database.windows.net'
              databaseName: 'tailspindatabase'
              sqlUsername: 'azuresql'
              sqlPassword: '$(adminPassword)'
              deployType: 'DacpacTask'
              deploymentAction: 'Script'
              dacpacFile: '$(Pipeline.Workspace)/dropDacpac/Tailspin.SpaceGame.Database/bin/Debug/Tailspin.SpaceGame.Database.dacpac'
              ipDetectionMethod: 'AutoDetect'
          - task: PowerShell@2
            displayName: Show Auto Generated SQL Script
            inputs:
              targetType: 'inline'
              script: | 
                Write-Host "Auto Generated SQL Update Script:"
                Get-Content d:\a\1\s\GeneratedOutputFiles\tailspindatabase_Script.sql | foreach {Write-Output $_}
          - task: PowerShell@2
            displayName: Show change script and check for schema changes
            inputs:
              targetType: 'inline'
              script: | 
                # Print the schema change script
                Write-Host "Auto Generated SQL Update Script:"
                Get-Content d:\a\1\s\GeneratedOutputFiles\tailspindatabase_Script.sql | foreach {Write-Output $_}

                # Check for schema changes
                $file = Get-Content "d:\a\1\s\GeneratedOutputFiles\tailspindatabase_Script.sql"
                $containsWord = $file | %{$_ -match "CREATE" -or $_ -match "ALTER" -or $_ -match "DROP"}
                if ($containsWord -contains $true) {
                  Install-Module VSTeam -Scope CurrentUser -Force
                  Set-VSTeamAccount –Account $(Acct) -PersonalAccessToken $(PAT)
                  $methodParameters = @{
                    ProjectName = "$(System.TeamProject)"
                    Name = "Release"}
                  $vg = Get-VSTeamVariableGroup @methodParameters
                  $vars = @{}
                  $vg.variables | Get-Member -MemberType *Property | %{$vars.($_.Name) = $vg.variables.($_.Name)}
                  $varName = "schemaChanged"
                  $vars.$varName= @{}
                  $vars.$varName.value = "True"
                  $vars.$varName.isSecret = $false
                  $methodParameters = @{
                    id = $vg.id
                    ProjectName = "$(System.TeamProject)"
                    Name = "Release"
                    Description = ""
                    Type = "Vsts"
                    Variables = $vars}
                  Update-VSTeamVariableGroup @methodParameters}

- stage: DBAVerificationApply
  displayName: 'Apply database schema changes'
  dependsOn: DBAVerificationScript
  condition: and(succeeded('DBAVerificationScript'), eq(variables['schemaChanged'], True))
  variables:
  - group: 'Release'
  jobs:
  - deployment: DBAVerificationApply
    pool:
      vmImage: 'windows-2019'
    variables:
    - group: 'Release'
    environment: 'dbaverificationapply'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureKeyVault@1
            inputs:
              azureSubscription: 'Resource Manager - Tailspin - Space Game'
              keyVaultName: '$(keyVaultName)'
              secretsFilter: '*'
          - download: current
            artifact: dropDacpac
            patterns: '**/*'
          - task: SqlAzureDacpacDeployment@1
            displayName: 'Deploy SQL schema'
            inputs:
              azureSubscription: 'Resource Manager - Tailspin - Space Game'
              authenticationType: 'server'
              serverName: 'tailspin-space-game-sql-dev-$(uniqueSuffix).database.windows.net'
              databaseName: 'tailspindatabase'
              sqlUsername: 'azuresql'
              sqlPassword: '$(adminPassword)'
              deployType: 'DacpacTask'
              deploymentAction: 'Publish'
              dacpacFile: '$(Pipeline.Workspace)/dropDacpac/Tailspin.SpaceGame.Database/bin/Debug/Tailspin.SpaceGame.Database.dacpac'
              ipDetectionMethod: 'AutoDetect'
          - task: PowerShell@2
            displayName: 'Remove "schemaChanged" pipeline variable'
            inputs:
              targetType: 'inline'
              script: | 
                Install-Module VSTeam -Scope CurrentUser -Force
                Set-VSTeamAccount –Account $(Acct) -PersonalAccessToken $(PAT)
                $methodParameters = @{
                  ProjectName = "$(System.TeamProject)"
                  Name = "Release"}
                $vg = Get-VSTeamVariableGroup  @methodParameters 
                $vars = @{}
                $vg.variables | Get-Member -MemberType *Property | %{$vars.($_.Name) = $vg.variables.($_.Name)}
                $vars.Remove("schemaChanged")
                $methodParameters = @{
                  id = $vg.id
                  ProjectName = "$(System.TeamProject)"
                  Name = "Release"
                  Description = ""
                  Type = "Vsts"
                  Variables = $vars}
                Update-VSTeamVariableGroup @methodParameters

- stage: 'Dev'
  displayName: 'Deploy to the dev environment'
  dependsOn:
  - DBAVerificationScript
  - DBAVerificationApply
  condition: |
    and
    (
      succeeded('DBAVerificationScript'),
      in(dependencies.DBAVerificationApply.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-18.04'
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureKeyVault@1
            inputs:
              azureSubscription: 'Resource Manager - Tailspin - Space Game'
              keyVaultName: '$(keyVaultName)'
              secretsFilter: '*'
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: 'Resource Manager - Tailspin - Space Game'
              appName: 'tailspin-space-game-web-dev-$(uniqueSuffix)'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
          - task: AzureAppServiceSettings@1
            displayName: Azure App Service Settings
            inputs:
              azureSubscription: 'Resource Manager - Tailspin - Space Game'
              appName: 'tailspin-space-game-web-dev-$(uniqueSuffix)'
              connectionStrings: |
                [{ "name": "DefaultConnection","value": "$(connectionString)","type": "SQLAzure","slotSetting": false }]